import React from 'react';
import InfoCard, { InfoCardProps } from '../components/InfoCard';

const projects: InfoCardProps[] = [
  {
    title: 'Parallelization of Inference on Recurrent Neural Networks',
    date: 'Nov. - Dec. 2021',
    techStack: 'C++ · CUDA · Bash · R',
    blurb:
      'Research on implementation decisions that optimally negotiate the competing priorities of speed and accuracy in GPU-accelerated, parallelized speedups of the forward-pass of recurrent neural networks--a process that typically requires purely sequential execution layout for full correctness.',
    image: '418-finalproj-preview.png',
    showcaseLink: 'https://onebuddingnerd.github.io/418-react/',
    showcaseLabel: 'Research Showcase',
    sourceLink: 'https://github.com/onebuddingnerd/418_finalproject_code',
  },
  {
    title: 'Watch it RAG-idly!',
    date: 'Sep. 2025',
    techStack: 'React with Typescript · Python3 (FastAPI)',
    blurb:
      "The tonic for video-learners in a hurry. This is a webapp that accepts YouTube video URLs, and, by virtue of extracting their transcripts and storing them for later inference, allows users to ask for summaries or pose questions about the video and receive responses (generated by a backend featuring an OpenAI LLM with a customizable RAG component) grounded in the video's content.",
    image: 'yt-rag-thumbnail.png',
    showcaseLink: 'https://youtu.be/GmYiVwAF8sU',
    showcaseLabel: 'Video Demo',
    sourceLink: 'https://github.com/tonystarkjr3/YT-transcriber-and-RAG-app',
  },
   {
    title: 'SpeedClerk: IT Helpdesk Companion',
    date: 'Dec. 2024',
    techStack: 'Vite + React.js (front-end) · Node.js (back-end) · Python3 (SDKs for Recurrent Automations)',
    blurb: "Three-in-one collection of assets--a back-end service using Express library, a Temporal workflow for a recurring automation included as a containerized runner, and a web UI--that hosts 'SpeedClerk', a system for automatically ingesting emails sent to an IT support address into a database and then rendering them as support tickets on an interactive homepage table (linking to forums that reflect email threads).",
    image: 'speedclerk-thumbnail.png',
    showcaseLabel: 'Video Demo',
    showcaseLink: 'https://drive.google.com/file/d/1q-r9Lv-JP7MbIZTbjB6EfLeswGBkVD1y/view?usp=sharing',
    sourceLink: 'https://github.com/tonystarkjr3/mentium-entrance-project'
  },
  {
    title: 'GGG: Gamified Grocery Guessing',
    date: 'Feb. 2021',
    techStack: 'Python (Flask, OpenCV) · Shell scripting',
    blurb: 'A GUI, with support for multiple profiles accessed by face-based authentication, that generates advice on (and offers gesture-based triggering of automated followup actions for) food purchases, informed by outputs from a custom-architected/-hyperparametrized model (a simple 3-layer linear transform) trained on a public dataset of millions of transactions at Aldi.',
    image: 'ggg-thumbnail.png',
    showcaseLabel: 'Description & Usage',
    showcaseLink: 'https://github.com/onebuddingnerd/coolimagetech/blob/main/README.md',
    sourceLink: 'https://github.com/onebuddingnerd/coolimagetech',
  },
  {
    title: 'Nutr-EZ Nutrition Aid',
    date: 'Sept. 2020',
    techStack: 'Python (web server & data processing) · HTML/CSS ',
    blurb:
      'A webapp catering to students interested in pursuing optimal on-campus venues/offerings for their dietary parameters and fitness goals, featuring adaptive content aiming to best combine profile-specific details, user feedback, and data gathered by a bootstrapped apparatus for querying the college\'s dining webpages.',
    image: 'nutrez-thumbnail.png',
    showcaseLabel: 'Submission (Devpost)',
    showcaseLink: 'https://devpost.com/software/nutr-ez-cdgm8p',
    sourceLink: 'https://github.com/onebuddingnerd/HackCMU20_Final',
  },
];

const Projects: React.FC = () => (
  <section className="max-w-6xl mx-auto px-4 py-16">
    <h1 className="text-5xl font-extrabold mb-12">Projects</h1>

    <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
      {projects.map((proj) => (
        <InfoCard key={proj.title} {...proj} />
      ))}
    </div>
  </section>
);

export default Projects;
